# -*- coding: utf-8 -*-
"""2218030DataCleansing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ut3Q8aduzLpeTYPxJe49pUFk0w96T6TK

1. HUBUNGKAN COLAB DENGAN GDRIVE
"""

#menghubungkan colab dengan google drive
from google.colab import drive
drive.mount('/content/drive')

"""2. IMPORT LIBRARY"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler

"""3. LOAD DATASETS"""

#membaca "dataset retail raw reduced" yang berada pada folder Colab Notebooks
#setelah itu disimpan pada variabel dengan nama dataset
dataset = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/Nike Dataset.csv')

#mencetak ukuran dataset dan menampilkan 5 baris data teratas
print('Ukuran Dataset : %d baris dan %d kolom\n' % dataset.shape)
print('Lima data teratas :')
print(dataset.head())

"""4. CEK INFORMASI DATASET"""

# cek tipe data, missing values, dsb
print(dataset.info())
print(dataset.describe(include='all'))

"""5. TANGANI MISSING VALUES"""

# jumlah missing value per kolom
print(dataset.isnull().sum())

# contoh penanganan (opsional, tergantung kasus):
dataset = dataset.dropna()   # hapus baris yg ada null
# atau isi nilai kosong
# dataset['Price per Unit'] = dataset['Price per Unit'].fillna(dataset['Price per Unit'].mean())

6. PERIKSA DATA DUPLIKAT

# cek baris duplikat
print(dataset.duplicated().sum())

# hapus kalau ada duplikat
dataset = dataset.drop_duplicates()

7. STANDARISASI FORMAT DATA

dataset['Invoice Date'] = pd.to_datetime(dataset['Invoice Date'], dayfirst=True)
dataset['Product'] = dataset['Product'].str.title()
dataset['Region'] = dataset['Region'].str.title()

"""8. VALIDASI NILAI OUTLIER

"""

sns.boxplot(x=dataset['Price per Unit'])
plt.show()

"""9. TAMBAHKAN KOLOM BARU"""

dataset['Month'] = dataset['Invoice Date'].dt.month

"""10. VALIDASI DATA"""

print(dataset.info())
print(dataset.head())

"""11. FEATURE ENGINEERING"""

dataset['Year'] = dataset['Invoice Date'].dt.year
dataset['Quarter'] = dataset['Invoice Date'].dt.quarter
dataset['Revenue per Unit'] = dataset['Total Sales'] / dataset['Units Sold']

"""12. EXPLORATORY DATA ANALYSIS"""

sns.heatmap(dataset[['Price per Unit','Total Sales','Units Sold']].corr(), annot=True, cmap='coolwarm')
plt.show()